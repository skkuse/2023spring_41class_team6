JavaScript에서 배열(array)은 여러 개의 값을 하나의 변수에 저장할 수 있는 데이터 구조입니다. 배열 안에는 순차적으로 정렬된 값들이 저장됩니다. 배열이 다른 변수 유형과 구별되는 것은 값이 인덱스를 사용하여 쉽게 액세스될 수 있다는 것입니다.

배열은 대괄호([ ])를 사용하여 만듭니다. 배열의 각 항목은 콤마(,)로 구분되며 대괄호 안에 위치합니다. 예를 들어 1에서 5까지의 숫자가 저장된 배열은 다음과 같이 만들 수 있습니다.

```javascript
let numbers = [1, 2, 3, 4, 5];
```

배열의 항목은 인덱스라는 번호를 사용하여 액세스할 수 있습니다. 인덱스는 배열의 첫 번째 항목이 0번으로 시작합니다. 따라서 numbers 배열에서 첫 번째 항목(1)은 numbers[0]으로 나타낼 수 있습니다. 마찬가지로 두 번째 항목(2)은 numbers[1]로 나타낼 수 있습니다.

배열 크기는 각 배열에 포함된 요소의 수에 따라 결정됩니다. JavaScript에서는 배열의 크기를 정할 필요가 없습니다. 배열의 크기는 새 항목을 추가하여 동적으로 조정될 수 있습니다.

배열에는 다양한 내장 함수가 있습니다. 이러한 함수를 사용하면 배열을 더 쉽게 조작할 수 있습니다. 예를 들어 배열의 각 항목을 반복하려면 for 루프를 사용할 수 있습니다.

```javascript
let numbers = [1, 2, 3, 4, 5];

for(let i = 0; i < numbers.length; i++) {
  console.log(numbers[i]);
}
```

이 코드는 배열 numbers의 각 항목을 반복하고 배열 항목을 콘솔에 기록합니다. 여기서 `numbers.length`는 배열의 총 항목 수입니다.

배열은 다양한 데이터 유형을 저장할 수 있습니다. 예를 들어, 문자열, 숫자, 부울 값 등이 저장될 수 있습니다. 경우에 따라 다른 배열이나 객체도 배열에 저장될 수 있습니다. 이러한 배열을 중첩 배열(nested array)이라고 부릅니다.

```javascript
let nestedArray = [[1, 2], [3, 4, 5]];
```

이 중첩 배열은 2개의 항목을 포함하며, 각각의 항목은 다른 배열입니다. 첫 번째 항목은 [1, 2]이고, 두 번째 항목은 [3, 4, 5]입니다. 이 중첩 배열의 모든 항목에 액세스하려면 중첩된 for 루프를 사용해야 합니다.

배열은 JavaScript에서 매우 중요한 데이터 구조입니다. 배열을 사용하면 데이터를 쉽게 관리하고 조작할 수 있습니다. 이러한 이유로 배열은 JavaScript 개발에서 핵심 구성 요소 중 하나입니다.