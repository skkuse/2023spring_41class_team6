Python에서 예외(Exception)은 코드를 실행하는 동안 발생하는 오류입니다. 이것들은 프로그래밍에서 발생하는 대부분의 오류를 나타냅니다. 예를 들어, 두 개의 숫자를 나눌 때, 두 번째 숫자가 0이면 예외가 발생합니다. 

예외 처리(exception handling)는 이러한 예외를 처리하는 방법입니다. 예외 처리를 통해 프로그램이 종료되는 것을 방지하고 사용자가 프로그램에서 발생한 문제를 이해할 수 있도록 합니다.

예외 처리 문법은 try와 except 문으로 구성됩니다. try 블록은 예외가 발생할 가능성이 있는 코드가 포함되는 블록입니다. except 블록은 try 블록에서 예외가 발생한 경우 실행됩니다.

```python
try:
    # 예외가 발생할 가능성이 있는 코드
except ExceptionType:
    # 예외 처리 코드
```

예를 들어, 다음 코드는 사용자가 0으로 나누는 경우를 처리하는 방법을 보여줍니다.

```python
try:
    x = 1 / 0
except ZeroDivisionError:
    print("0으로 나눌 수 없습니다.")
```

이 코드에서는 ZeroDivisionError를 예외 유형으로 사용합니다. 예외가 발생하면, "0으로 나눌 수 없습니다." 라는 메시지가 출력됩니다.

또 다른 예제로, try-except문을 사용하여 파일을 열고 읽는 코드가 있습니다.

```python
try:
    file = open("file.txt")
    content = file.read()
    print(content)
except FileNotFoundError:
    print("파일을 찾을 수 없습니다.")
finally:
    file.close()
```

이 예제에서는 파일을 열고 읽는 시도가 실패할 경우 FileNotFoundError 예외가 발생합니다. except 블록에서는 "파일을 찾을 수 없습니다." 라는 메시지를 출력하고, finally 블록에서는 파일을 닫습니다.

즉 예외 처리를 통해 프로그램이 비정상적으로 종료되는 경우를 방지하고, 사용자에게 프로그램 실행 중 발생한 오류에 대한 정보를 제공할 수 있습니다.