JAVA 언어에서 Control Statements(제어문)는 코드의 흐름을 제어하고 조건에 따라 실행 흐름을 변경하는 데 사용됩니다. 이러한 제어문은 조건문과 반복문으로 분류됩니다.

조건문에는 if문, if-else문, switch문 등이 있으며, 각각의 제어문은 작성된 조건식에 따라 그 아래의 코드 블록이 실행됩니다.

if문은 가장 기본적인 조건문으로, 만족하는 경우 해당 조건식의 코드 블록이 실행됩니다. 아래는 if문의 기본적인 형태입니다.

```java
if (조건식) {
    // 조건식이 참일 경우 실행되는 코드 블록
}
```

if-else문은 조건식이 참일 때와 거짓일 때 실행할 코드 블록을 따로 지정해 줄 수 있습니다. 아래는 if-else문의 형태입니다.

```java
if (조건식) {
    // 조건식이 참일 경우 실행되는 코드 블록
} else {
    // 조건식이 거짓일 경우 실행되는 코드 블록
}
```

switch문은 if문과 유사하지만, 조건문이 다른 값들 중 하나와 일치하는지 여부를 검사합니다. 이때 일치하는 값(case)에 해당하는 코드 블록이 실행됩니다.

```java
switch (변수) {
    case 값1:
        // 변수가 값1과 일치하는 경우 실행되는 코드 블록
        break;
    case 값2:
        // 변수가 값2와 일치하는 경우 실행되는 코드 블록
        break;
    // ...
    default:
        // 변수가 일치하는 값이 없을 경우 실행되는 코드 블록
}
```

반복문에는 while문, do-while문, for문 등이 있으며, 각각의 제어문은 지정된 조건이 참일 경우 계속해서 코드 블록을 반복 실행합니다.

while문은 조건식이 참일 경우 코드 블록을 반복 실행하며, 아래는 while문의 형태입니다.

```java
while (조건식) {
    // 조건식이 참일 경우 반복 실행되는 코드 블록
}
```

do-while문은 while문과 매우 유사하지만, 코드 블록을 한 번 실행한 후 조건식을 검사합니다. 이때 코드 블록이 최소한 한 번은 실행됩니다.

```java
do {
    // 조건식 검사 전에 한 번 실행되는 코드 블록
} while (조건식);
```

for문은 반복 횟수와 조건식을 함께 제어할 수 있으며, 아래는 for문의 기본적인 형태입니다.

```java
for (초기화식; 조건식; 증감식) {
    // 조건식이 참일 경우 반복 실행되는 코드 블록
}
```

이러한 제어문은 코드의 실행 흐름을 적절히 제어하여 원하는 결과를 얻을 수 있도록 도와줍니다. 따라서 JAVA 언어를 다룰 때는 Control Statements의 특징과 사용 방법을 충분히 이해하고 활용해야 합니다.